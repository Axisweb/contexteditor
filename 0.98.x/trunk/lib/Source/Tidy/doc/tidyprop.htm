<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>tTidy Configuration Properties</title></head>
<body bgcolor="#D0D0A0">

  <div align="center">
    <h2><font color="#606000">tTidy Configuration Properties Reference</font></h2>
    ( Properties that correspond to <i>HTML-Tidy</i> configuration options. )<br><br>&nbsp;
  </div>

  <table summary="Tidy Options Quick Reference Detail Section" border="0" cellpadding="8" cellspacing="0" bgcolor="#F0F0D0">
    <tr valign="bottom">
      <td valign="top"  align="center" bgcolor="#D0F0F0">
        <a name="MarkupReference" ></a><br  ><b>Markup Properties</b><br   >&nbsp;
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="add-xml-decl" ></a></TD></TR >
    <tr><td  valign="top"><b>XmlDecl: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>add-xml-decl</i>
    <br>
      This option specifies if Tidy should add the XML declaration when outputting XML or XHTML. 
      Note that if the input already includes an &lt;?xml ... ?&gt; declaration then this option will be ignored.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="add-xml-space" ></a></TD></TR >
    <tr><td  valign="top"><b>XmlSpace: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>add-xml-space</i>
    <br>
      This option specifies if Tidy should add xml:space="preserve" to elements such as &lt;PRE&gt;,
      &lt;STYLE&gt; and &lt;SCRIPT&gt; when generating XML. This is needed if the whitespace in such 
      elements is to be parsed appropriately without having access to the DTD.
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="alt-text" ></a></TD></TR >
    <tr><td  valign="top"><b>AltText: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: [empty-string] &nbsp; &nbsp; &nbsp; Ref: <i>alt-text</i>
    <br>
      This option specifies the default "alt=" text Tidy uses for &lt;IMG&gt; attributes. This feature
      is dangerous as it suppresses further accessibility warnings. You are responsible for making your
      documents accessible to people who can not see the images!
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="assume-xml-procins" ></a></TD></TR >
    <tr><td  valign="top"><b>XmlPIs: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>assume-xml-procins</i>
    <br>
      This option specifies if Tidy should change
      the parsing of processing instructions to require ?&gt; as
      the terminator rather than &gt;. This option is automatically
      set if the input is in XML.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="bare" ></a></TD></TR >
    <tr><td  valign="top"><b>MakeBare: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>bare</i>
    <br>
      This option specifies if Tidy should strip
      Microsoft specific HTML from Word 2000 documents, and output
      spaces rather than non-breaking spaces where they exist in
      the input.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="break-before-br" ></a></TD></TR >
    <tr><td  valign="top"><b>BreakBeforeBR: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>break-before-br</i>
    <br>
      This option specifies if Tidy should output a
      line break before each &lt;BR&gt; element.
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="clean" ></a></TD></TR >
    <tr><td  valign="top"><b>MakeClean: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>clean</i>
    <br>
      This option specifies if Tidy should strip
      out surplus presentational tags and attributes replacing them
      by style rules and structural markup as appropriate. It works
      well on the HTML saved by Microsoft Office products.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="doctype" ></a></TD></TR >
    <tr><td  valign="top"><b>Doctype: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: "auto" &nbsp; &nbsp; &nbsp; Ref: <i>doctype</i>
    <br>
      This option specifies the DOCTYPE declaration generated by Tidy. If set to "omit" the output won't 
      contain a DOCTYPE declaration. If set to "auto" (the default) Tidy will use an educated guess based 
      upon the contents of the document. If set to "strict", Tidy will set the DOCTYPE to the strict DTD. 
      If set to "loose", the DOCTYPE is set to the loose (transitional) DTD. Alternatively, you can supply a
      string for the formal public identifier (FPI). For example: doctype: "-//ACME//DTD HTML 3.14159//EN" 
      If you specify the FPI for an XHTML document, Tidy will set the system identifier to the empty string.
      Tidy leaves the DOCTYPE for generic XML documents unchanged.
    </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="drop-empty-paras" ></a></TD></TR >
    <tr><td  valign="top"><b>DropEmptyParas: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>drop-empty-paras</i>
    <br>
      This option specifies if Tidy should discard
      empty paragraphs. If set to no, empty paragraphs are replaced
      by a pair of &lt;BR&gt; elements as HTML4 precludes empty
      paragraphs.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="drop-font-tags" ></a></TD></TR >
    <tr><td  valign="top"><b>DropFontTags: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>drop-font-tags</i>
    <br>
      This option specifies if Tidy should discard
      &lt;FONT&gt; and &lt;CENTER&gt; tags rather than creating the
      corresponding style rules, but only if the clean option is
      also set to yes.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="drop-proprietary-attributes" ></a></TD></TR >
    <tr><td  valign="top"><b>DropPropAttrs: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>drop-proprietary-attributes</i>
    <br>
      This option specifies if Tidy should strip
      out proprietary attributes, such as MS data binding
      attributes.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="enclose-block-text" ></a></TD></TR >
    <tr><td  valign="top"><b>EncloseBlockText: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>enclose-block-text</i>
    <br>
      This option specifies if Tidy should insert a
      &lt;P&gt; element to enclose any text it finds in any element
      that allows mixed content for HTML transitional but not HTML
      strict.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="enclose-text" ></a></TD></TR >
    <tr><td  valign="top"><b>EncloseBodyText: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>enclose-text</i>
    <br>
      This option specifies if Tidy should enclose
      any text it finds in the body element within a &lt;P&gt;
      element. This is useful when you want to take existing HTML
      and use it with a style sheet.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="escape-cdata" ></a></TD></TR >
    <tr><td  valign="top"><b>EscapeCdata: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>escape-cdata</i>
    <br>
      This option specifies if Tidy should convert
      &lt;![CDATA[]]&gt; sections to normal text.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="fix-bad-comments" ></a></TD></TR >
    <tr><td  valign="top"><b>FixComments: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>fix-bad-comments</i>
    <br>
      This option specifies if Tidy should replace
      unexpected hyphens with "=" characters when it comes across
      adjacent hyphens. The default is yes. This option is provided
      for users of Cold Fusion which uses the comment syntax:
      &lt;!--- ---&gt;</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><a name="fix-uri" ></a><BR ></TD></TR >
    <tr><td  valign="top"><b>FixUri: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>fix-uri</i>
    <br>
      This option specifies if Tidy should check
      attribute values that carry URIsfor illegal characters and if
      such are found, escape them as HTML 4 recommends.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="hide-comments" ></a></TD></TR >
    <tr><td  valign="top"><b>HideComments: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>hide-comments</i>
    <br>
      This option specifies if Tidy should print out comments.
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="hide-endtags" ></a></TD></TR >
    <tr><td  valign="top"><b>HideEndTags: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>hide-endtags</i>
    <br>
      This option specifies if Tidy should omit
      optional end-tags when generating the pretty printed markup.
      This option is ignored if you are outputting to XML.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="indent-cdata" ></a></TD></TR >
    <tr><td  valign="top"><b>IndentCdata: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>indent-cdata</i>
    <br>
      This option specifies if Tidy should indent
      &lt;![CDATA[]]&gt; sections.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="input-xml" ></a></TD></TR >
    <tr><td  valign="top"><b>XmlTags: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>input-xml</i>
    <br>
      This option specifies if Tidy should use the
      XML parser rather than the error correcting HTML parser.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="join-classes" ></a></TD></TR >
    <tr><td  valign="top"><b>JoinClasses: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>join-classes</i>
    <br>
      This option specifies if Tidy should combine
      class names to generate a single new class name, if multiple
      class assignments are detected on an element.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="join-styles" ></a></TD></TR >
    <tr><td  valign="top"><b>JoinStyles: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>join-styles</i>
    <br>
      This option specifies if Tidy should combine
      styles to generate a single new style, if multiple style
      values are detected on an element.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="logical-emphasis" ></a></TD></TR >
    <tr><td  valign="top"><b>LogicalEmphasis: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>logical-emphasis</i>
    <br>
      This option specifies if Tidy should replace
      any occurrence of &lt;I&gt; by &lt;EM&gt; and any occurrence
      of &lt;B&gt; by &lt;STRONG&gt;. In both cases, the attributes
      are preserved unchanged. This option can be set independently
      of the clean and drop-font-tags options.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="lower-literals" ></a></TD></TR >
    <tr><td  valign="top"><b>LowerLiterals: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>lower-literals</i>
    <br>
      This option specifies if Tidy should convert
      the value of an attribute that takes a list of predefined
      values to lower case. This is required for XHTML
      documents.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="ncr" ></a></TD></TR >
    <tr><td  valign="top"><b>NCR: </b> &nbsp; <i>Boolean</i> &nbsp; (read/write) &nbsp; default: True &nbsp;  &nbsp;  &nbsp; Ref: <i>ncr</i>
    <br>
      This option specifies if Tidy should allow
      numeric character references.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="new-blocklevel-tags" ></a></TD></TR >
    <tr><td  valign="top"><b>BlockTags: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: [empty-string] &nbsp; &nbsp; &nbsp; Ref: <i>new-blocklevel-tags</i>
    <br>
      This option specifies new block-level tags.
      This option takes a space or comma separated list of tag
      names. Unless you declare new tags, Tidy will refuse to
      generate a tidied file if the input includes previously
      unknown tags. Note you can't change the content model for
      elements such as &lt;TABLE&gt;, &lt;UL&gt;, &lt;OL&gt; and
      &lt;DL&gt;.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="new-empty-tags" ></a></TD></TR >
    <tr><td  valign="top"><b>EmptyTags: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: [empty-string] &nbsp; &nbsp; &nbsp; Ref: <i>new-empty-tags</i>
    <br>
      This option specifies new empty inline tags.
      This option takes a space or comma separated list of tag
      names. Unless you declare new tags, Tidy will refuse to
      generate a tidied file if the input includes previously
      unknown tags. Remember to also declare empty tags as either
      inline or blocklevel.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="new-inline-tags" ></a></TD></TR >
    <tr><td  valign="top"><b>InlineTags: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: [empty-string] &nbsp; &nbsp; &nbsp; Ref: <i>new-inline-tags</i>
    <br>
      This option specifies new non-empty inline
      tags. This option takes a space or comma separated list of
      tag names. Unless you declare new tags, Tidy will refuse to
      generate a tidied file if the input includes previously
      unknown tags.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="new-pre-tags" ></a></TD></TR >
    <tr><td  valign="top"><b>PreTags: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: [empty-string] &nbsp; &nbsp; &nbsp; Ref: <i>new-pre-tags</i>
    <br>
      This option specifies new tags that are to be
      processed in exactly the same way as HTML's &lt;PRE&gt;
      element. This option takes a space or comma separated list of
      tag names. Unless you declare new tags, Tidy will refuse to
      generate a tidied file if the input includes previously
      unknown tags. Note you can not as yet add new CDATA elements
      (similar to &lt;SCRIPT&gt;).</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="numeric-entities" ></a></TD></TR >
    <tr><td  valign="top"><b>NumEntities: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>numeric-entities</i>
    <br>
      This option specifies if Tidy should output
      entities other than the built-in HTML entities (&amp;amp;,
      &amp;lt;, &amp;gt; and &amp;quot;) in the numeric rather than
      the named entity form.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="output-html" ></a></TD></TR >
    <tr><td  valign="top"><b>HTML: </b> &nbsp; <i>String</i> &nbsp; (read-only) &nbsp; default: empty &nbsp; &nbsp; &nbsp; Ref: <i>output-html</i>
    <br>
      Reading this property will tell Tidy to parse the input and return the result as standard HTML. 
      This also causes Tidy to set the DOCTYPE as appropriate to the detected HTML version. 
      The case of tags and attributes will be formatted according to the <i>UpperCaseTags</i> and <i>UpperCaseAttrs</i> properties.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="output-xhtml" ></a></TD></TR >
    <tr><td  valign="top"><b>XHTML: </b> &nbsp; <i>String</i> &nbsp; (read-only) &nbsp; default: empty &nbsp; &nbsp; &nbsp; Ref: <i>output-xhtml</i>
    <br>
      Reading this property will tell Tidy to parse the input and return the result as extensible HTML. 
      This also causes Tidy to set the DOCTYPE and default namespace as appropriate to XHTML. 
      If a DOCTYPE or namespace is given they will checked for consistency with the content of the document. 
      In the case of an inconsistency, the corrected values will appear in the output. 
      For XHTML, entities can be written as named or numeric entities according to the setting of the "numeric-entities" option. 
      The original case of tags and attributes will be preserved, regardless of other options.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="output-xml" ></a></TD></TR >
    <tr><td  valign="top"><b>XML: </b> &nbsp; <i>String</i> &nbsp; (read-only) &nbsp; default: empty &nbsp; &nbsp; &nbsp; Ref: <i>output-xml</i>
    <br>
      Reading this property will tell Tidy to parse the input and return the result as well-formed XML. 
      Any entities not defined in XML 1.0 will be written as numeric entities to allow them to be parsed by a XML parser. 
      The original case of tags and attributes will be preserved, regardless of other options.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="quote-ampersand" ></a></TD></TR >
    <tr><td  valign="top"><b>QuoteAmpersand: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>quote-ampersand</i>
    <br>
      This option specifies if Tidy should output
      unadorned &amp; characters as &amp;amp;.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="quote-marks" ></a></TD></TR >
    <tr><td  valign="top"><b>QuoteMarks: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>quote-marks</i>
    <br>
      This option specifies if Tidy should output "
      characters as &amp;quot; as is preferred by some editing
      environments. The apostrophe character ' is written out as
      &amp;#39; since many web browsers don't yet support
      &amp;apos;.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="quote-nbsp" ></a></TD></TR >
    <tr><td  valign="top"><b>QuoteNbsp: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>quote-nbsp</i>
    <br>
      This option specifies if Tidy should output
      non-breaking space characters as entities, rather than as the
      Unicode character value 160 (decimal).</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="repeated-attributes" ></a></TD></TR >
    <tr><td  valign="top"><b>DuplicateAttrs: </b>&nbsp; <i>TidyDupAttrModes </i> &nbsp; (read/write) &nbsp; default: TidyKeepFirst &nbsp; &nbsp; &nbsp; Ref: <i>repeated-attributes</i>
    <br>
      This option specifies if Tidy should keep the
      first or last attribute, if an attribute is repeated, e.g.
      has two align attributes.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="replace-color" ></a></TD></TR >
    <tr><td  valign="top"><b>ReplaceColor: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>replace-color</i>
    <br>
      This option specifies if Tidy should replace
      numeric values in color attributes by HTML/XHTML color names
      where defined, e.g. replace "#ffffff" with "white".</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="show-body-only" ></a></TD></TR >
    <tr><td  valign="top"><b>BodyOnly: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>show-body-only</i>
    <br>
      This option specifies if Tidy should print
      only the contents of the body tag as an HTML fragment. Useful
      for incorporating existing whole pages as a portion of
      another page.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="slide-style" ></a></TD></TR >
    <tr><td  valign="top"><b>SlideStyle: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: [empty-string] &nbsp; &nbsp; &nbsp; Ref: <i>slide-style</i>
    <br>
      Currently not used.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="split" ></a></TD></TR >
    <tr><td  valign="top"><b>BurstSlides: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>split</i>
    <br>
      This option specifies if Tidy should create a
      sequence of slides from the input, splitting the markup prior
      to each successive &lt;H2&gt;. The slides are written to
      "slide001.html", "slide002.html" etc.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="uppercase-attributes" ></a></TD></TR >
    <tr><td  valign="top"><b>UpperCaseAttrs: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>uppercase-attributes</i>
    <br>
      This option specifies if Tidy should output
      attribute names in upper case. The default is no, which
      results in lower case attribute names, except for XML input,
      where the original case is preserved.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="uppercase-tags" ></a></TD></TR >
    <tr><td  valign="top"><b>UpperCaseTags: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>uppercase-tags</i>
    <br>
      This option specifies if Tidy should output
      tag names in upper case. The default is no, which results in
      lower case tag names, except for XML input, where the
      original case is preserved.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="word-2000" ></a></TD></TR >
    <tr><td  valign="top"><b>Word2000: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>word-2000</i>
    <br>
      This option specifies if Tidy should go to
      great pains to strip out all the surplus stuff Microsoft Word
      2000 inserts when you save Word documents as "Web pages".
      Doesn't handle embedded images or VML.</td>
    </tr>

<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >

    <tr valign="bottom">
      <td valign="top"  align="center" bgcolor="#D0F0F0">
        <a name="DiagnosticsReference" ></a><br  ><b>Diagnostics Properties</b><br   >&nbsp;
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="error-file" ></a></TD></TR >
    <tr><td  valign="top"><b>ErrorFile: </b>&nbsp; <i>String </i> &nbsp; (read/write) &nbsp; default: [empty-string] &nbsp; &nbsp; &nbsp; Ref: <i>error-file</i>
    <br>
      This option specifies the error file Tidy uses for errors and warnings. <br>
      Normally errors and warnings are output to "stderr".<br>
      To completely suppress the output of these messages, set <i>ErrorFile</i> to the constant value: <tt>TIDY_NULL_FILE</tt>.
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="force-output" ></a></TD></TR >
    <tr><td  valign="top"><b>ForceOutput: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>force-output</i>
    <br>
      This option specifies if Tidy should produce
      output even if errors are encountered. Use this option with
      care - if Tidy reports an error, this means Tidy was not able
      to, or is not sure how to, fix the error, so the resulting
      output may not reflect your intention.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="gnu-emacs" ></a></TD></TR >
    <tr><td  valign="top"><b>Emacs: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>gnu-emacs</i>
    <br>
      This option specifies if Tidy should change
      the format for reporting errors and warnings to a format that
      is more easily parsed by GNU Emacs.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="quiet" ></a></TD></TR >
    <tr><td  valign="top"><b>Quiet: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>quiet</i>
    <br>
      This option specifies if Tidy should output
      the summary of the numbers of errors and warnings, or the
      welcome or informational messages.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="show-errors" ></a></TD></TR >
    <tr><td  valign="top"><b>ShowErrors: </b>&nbsp; <i>LongWord </i> &nbsp; (read/write) &nbsp; default: 6 &nbsp; &nbsp; &nbsp; Ref: <i>show-errors</i>
    <br>
      This option specifies the number Tidy uses to
      determine if further errors should be shown. If set to 0,
      then no errors are shown.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="show-warnings" ></a></TD></TR >
    <tr><td  valign="top"><b>ShowWarnings: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>show-warnings</i>
    <br>
      This option specifies if Tidy should suppress
      warnings. This can be useful when a few errors are hidden in
      a flurry of warnings.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="tidy-mark" ></a></TD></TR >
    <tr><td  valign="top"><b>Mark: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>tidy-mark</i>
    <br>
      This option specifies if Tidy should add a
      meta element to the document head to indicate that the
      document has been tidied. Tidy won't add a meta element if
      one is already present.</td>
    </tr>

<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >

    <tr valign="bottom">
      <td valign="top"  align="center" bgcolor="#D0F0F0">
        <a name="PrettyPrintReference" ></a><br  ><b>Pretty Print Properties</b><br   >&nbsp;
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="indent" ></a></TD></TR >
    <tr><td  valign="top"><b>IndentContent: </b>&nbsp; <i>TidyTriState </i> &nbsp; (read/write) &nbsp; default: TidyAuto &nbsp; &nbsp; &nbsp; Ref: <i>indent</i>
    <br><br>
      This option specifies if Tidy should indent block-level tags. Possible values are:<br>
      <br>
      <i>TidyAuto</i>: <br>
      &nbsp; Tidy will decide if it should indent content of tags such as TITLE, H1, LI, TD, or P .<br>
      &nbsp; ( Depending on whether or not the content includes a block-level element. ) <br>
      <br>
      <i>TidyFalse</i>:<br> 
      &nbsp; The output will not be indented.<br>
      <br>
      <i>TidyTrue</i>: <br>
      &nbsp; You are advised to avoid this setting as it can expose layout bugs in some browsers.<br>&nbsp;<br></td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="indent-attributes" ></a></TD></TR >
    <tr><td  valign="top"><b>IndentAttributes: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>indent-attributes</i>
    <br>
      This option specifies if Tidy should begin
      each attribute on a new line.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="indent-spaces" ></a></TD></TR >
    <tr><td  valign="top"><b>IndentSpaces: </b>&nbsp; <i>LongWord </i> &nbsp; (read/write) &nbsp; default: 2 &nbsp; &nbsp; &nbsp; Ref: <i>indent-spaces</i>
    <br>
      This option specifies the number of spaces
      Tidy uses to indent content, when indentation is
      enabled.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="literal-attributes" ></a></TD></TR >
    <tr><td  valign="top"><b>LiteralAttribs: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>literal-attributes</i>
    <br>
      This option specifies if Tidy should ensure
      that whitespace characters within attribute values are passed
      through unchanged.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="markup" ></a></TD></TR >
    <tr><td  valign="top"><b>ShowMarkup: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>markup</i>
    <br>
      This option specifies if Tidy should generate
      a pretty printed version of the markup. Note that Tidy won't
      generate a pretty printed version if it finds significant
      errors (see force-output).</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="tab-size" ></a></TD></TR >
    <tr><td  valign="top"><b>TabSize: </b>&nbsp; <i>LongWord </i> &nbsp; (read/write) &nbsp; default: 8 &nbsp; &nbsp; &nbsp; Ref: <i>tab-size</i>
    <br>
      This option specifies the number of columns
      that Tidy uses between successive tab stops. It is used to
      map tabs to spaces when reading the input. Tidy never outputs
      tabs.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="wrap" ></a></TD></TR >
    <tr><td  valign="top"><b>WrapLen: </b>&nbsp; <i>LongWord </i> &nbsp; (read/write) &nbsp; default: 68 &nbsp; &nbsp; &nbsp; Ref: <i>wrap</i>
    <br>
      This option specifies the right margin Tidy
      uses for line wrapping. Tidy tries to wrap lines so that they
      do not exceed this length. Set wrap to zero if you want to
      disable line wrapping.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="wrap-asp" ></a></TD></TR >
    <tr><td  valign="top"><b>WrapAsp: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>wrap-asp</i>
    <br>
      This option specifies if Tidy should line
      wrap text contained within ASP pseudo elements, which look
      like: &lt;% ... %&gt;.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="wrap-attributes" ></a></TD></TR >
    <tr><td  valign="top"><b>WrapAttVals: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>wrap-attributes</i>
    <br>
      This option specifies if Tidy should line
      wrap attribute values, for easier editing. This option can be
      set independently of wrap-script-literals.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="wrap-jste" ></a></TD></TR >
    <tr><td  valign="top"><b>WrapJste: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>wrap-jste</i>
    <br>
      This option specifies if Tidy should line
      wrap text contained within JSTE pseudo elements, which look
      like: &lt;# ... #&gt;.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="wrap-php" ></a></TD></TR >
    <tr><td  valign="top"><b>WrapPhp: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>wrap-php</i>
    <br>
      This option specifies if Tidy should line
      wrap text contained within PHP pseudo elements, which look
      like: &lt;?php ... ?&gt;.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="wrap-script-literals" ></a></TD></TR >
    <tr><td  valign="top"><b>WrapScriptlets: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: False &nbsp; &nbsp; &nbsp; Ref: <i>wrap-script-literals</i>
    <br>
      This option specifies if Tidy should line
      wrap string literals that appear in script attributes. Tidy
      wraps long script string literals by inserting a backslash
      character before the line break.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="wrap-sections" ></a></TD></TR >
    <tr><td  valign="top"><b>WrapSection: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>wrap-sections</i>
    <br>
      This option specifies if Tidy should line
      wrap text contained within &lt;![ ... ]&gt; section
      tags.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="fix-backslash" ></a></TD></TR >
    <tr><td  valign="top"><b>FixBackslash: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>fix-backslash</i>
    <br>
      This option specifies if Tidy should replace
      backslash characters "\" in URLs by forward slashes "/".</td>
    </tr>

<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
    <tr valign="bottom">
      <td valign="top"  align="center" bgcolor="#D0F0F0">
        <a name="EncodingReference" ></a><br  ><b>Character Encoding Properties</b><br   >&nbsp;
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="ascii-chars" ></a></TD></TR >
    <tr><td  valign="top"><b>AsciiChars: </b>&nbsp; <i>Boolean </i> &nbsp; (read/write) &nbsp; default: True &nbsp; &nbsp; &nbsp; Ref: <i>ascii-chars</i>
    <br>
      Can be used to modify behavior of -c (--clean
      yes) option. Defaults to "yes" when using -c. Set to "no" to
      prevent converting &gt;emdash;, &amp;rdquo;, and other named
      character entities to their ascii equivalents.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="char-encoding" ></a></TD></TR >
    <tr><td  valign="top"><b>CharEncoding: </b>&nbsp; <i>TidyEncodingID </i> &nbsp; (read/write) &nbsp; default: TidyASCII &nbsp; &nbsp; &nbsp; Ref: <i>char-encoding</i>
    <br><br>
      This option specifies the character encoding Tidy uses for both the input and output. <br><br>
      For ascii, Tidy will accept Latin-1 (ISO-8859-1) character values, but will use
      entities for all characters whose value &gt; 127. <br>
      For raw, Tidy will output values above 127 without translating them into entities. <br>
      For latin1, characters above 255 will be written as entities. <br>
      For utf8, Tidy assumes that both input and output is encoded as UTF-8. <br>
      You can use iso2022 for files encoded using the ISO-2022 family of encodings e.g. ISO-2022-JP. <br>
      For mac and win1252, Tidy will accept vendor specific character values, but will use entities for all
      characters whose value &gt; 127.<br>
      <br>
      Acceptable values are: <br><tt>
          TidyRaw,     
          TidyASCII,   
          TidyLatin1,  
          TidyUTF8,    
          TidyISO2022, 
          TidyMacRoman,<br>
          TidyWin1252, 
          TidyUTF16le, 
          TidyUTF16be, 
          TidyUTF16,   
          TidyBig5,   
          TidyShiftJIS.</tt><br>&nbsp;
      </td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="input-encoding" ></a></TD></TR >
    <tr><td  valign="top"><b>InCharEncoding: </b>&nbsp; <i>TidyEncodingID </i> &nbsp; (read/write) &nbsp; default: TidyLatin1 &nbsp; &nbsp; &nbsp; Ref: <i>input-encoding</i>
    <br>
      This option specifies the character encoding Tidy uses for the input. <br>
      See <i>CharEncoding</i> for more info.</td>
    </tr>


<TR><TD bgcolor="#D0D0A0" ><BR ><a name="output-encoding" ></a></TD></TR >
    <tr><td  valign="top"><b>OutCharEncoding: </b>&nbsp; <i>TidyEncodingID </i> &nbsp; (read/write) &nbsp; default: TidyASCII &nbsp; &nbsp; &nbsp; Ref: <i>output-encoding</i>
    <br>
      This option specifies the character encoding Tidy uses for the output. <br>
      May only be different from input-encoding for Latin encodings (ascii, latin1, mac, win1252).<br>
      See <i>CharEncoding</i> for more info.
      </td>
    </tr>



<TR><TD bgcolor="#D0D0A0" ><BR ><a name="language" ></a></TD></TR >
    <tr><td  valign="top"><b>Language</b> &nbsp; default: [empty-string]
    <br>
      Currently not used, but this option specifies
      the language Tidy uses.</td>
    </tr>

<TR><TD bgcolor="#D0D0A0" ><BR ><a name="output-bom" ></a></TD></TR >
    <tr><td  valign="top"><b>OutputBOM: </b>&nbsp; <i>TidyTriState</i> &nbsp; (read/write) &nbsp; default: TidyAuto  &nbsp; &nbsp; &nbsp; Ref: <i>output-bom</i>
    <br>
      (Only for UTF-8 and UTF-16 output encodings.)<br>
      This option specifies if Tidy should write a Unicode Byte Order Mark character to the beginning of the output. <br>
      If set to <i>TidyAuto</i>, this option causes Tidy to write a BOM to the output only if a BOM was present at the beginning of the input.<br>
      A BOM is always written for XML/XHTML output using UTF-16 output encodings.<br>
      (BOM; also known as Zero Width No-Break Space; has value of U+FEFF)
      </td>

    </tr>


<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >
<TR ><TD bgcolor="#D0D0A0" ><BR ></TD></TR >

</table>
</body></html>
